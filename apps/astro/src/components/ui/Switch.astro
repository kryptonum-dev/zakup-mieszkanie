---
import type { HTMLAttributes } from 'astro/types'

type Props = {
  asLabel?: boolean
  inputProps?: HTMLAttributes<'input'>
} & HTMLAttributes<'label'>

const { inputProps, asLabel, ...props } = Astro.props

const Element = asLabel ? 'label' : 'div'
---

<Element data-switch-element {...props}>
  <input type="checkbox" {...inputProps} />
  <div class="toggle-icon">
    <svg xmlns="http://www.w3.org/2000/svg" width="0.625rem" height="0.5rem" fill="none" viewBox="0 0 10 8">
      <path stroke="#f2ede8" stroke-linecap="round" stroke-linejoin="round" d="M9 1 3.034 7 1 4.955"></path>
    </svg>
  </div>
</Element>

<style lang="scss">
  [data-switch-element] {
    box-sizing: content-box;
    cursor: pointer;
    width: 3.375rem;
    height: 2rem;
    border-radius: 3.375rem;
    border: 1px solid var(--primary-600, #271607);
    background-color: var(--primary-100, #f2ede8);
    position: relative;
    &::before {
      content: '';
      position: absolute;
      left: 50%;
      top: 50%;
      width: 2.75rem;
      height: 2.75rem;
      transform: translate(-50%, -50%);
    }
    transition: background-color 500ms var(--easing);
    &:hover {
      background-color: var(--primary-200, #e6dbd1);
    }
    &:has(input:focus-visible) {
      outline: 2px solid var(--primary-700, #271607);
      outline-offset: 3px;
    }
    &:has(input:checked) {
      background-color: var(--primary-200, #e6dbd1);
      .toggle-icon {
        transform: translateX(1.375rem);
        svg {
          stroke-dashoffset: 24;
        }
      }
    }
    &:has(input:disabled) {
      opacity: 0.62;
    }
    input {
      position: absolute;
      opacity: 0;
    }
  }
  .toggle-icon {
    width: 1.75rem;
    height: 1.75rem;
    margin: 0.125rem;
    border-radius: 50%;
    background-color: var(--primary-600, #271607);
    display: grid;
    place-items: center;
    transition: transform 500ms var(--easing);
    svg {
      stroke-dasharray: 12;
      stroke-dashoffset: 12;
      transition: stroke-dashoffset 500ms var(--easing);
    }
  }
</style>
