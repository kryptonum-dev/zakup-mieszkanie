---
import type { HTMLAttributes } from 'astro/types'
import { PortableText } from 'astro-portabletext'
import type { PortableTextProps } from 'astro-portabletext/types'
import Mark from './Mark.astro'
import Block from './Block.astro'

export type PortableTextValue = PortableTextProps['value']

type Props = {
  value: PortableTextValue
  heading?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'
} & HTMLAttributes<'div' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'>

const { heading: HeadingTag, value, ...props } = Astro.props

const valueArray = Array.isArray(value) ? value : [value]
---

{
  HeadingTag ? (
    <HeadingTag {...props}>
      {valueArray.map((value: PortableTextValue, index: number) =>
        index > 0 ? (
          <span {...props}>{<PortableText value={value} components={{ block: Block, mark: Mark }} />}</span>
        ) : (
          <PortableText value={value} components={{ block: Block, mark: Mark }} />
        )
      )}
    </HeadingTag>
  ) : (
    <div {...props}>
      <PortableText value={value} components={{ mark: Mark }} />
    </div>
  )
}

<style lang="scss">
  div {
    :global(ul),
    :global(ol) {
      display: grid;
      gap: 0.25rem;
      margin: 0.25rem 0;
    }
    :global(ul) {
      :global(li) {
        padding-left: 1.5rem;
        position: relative;
        &::before {
          content: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="none" viewBox="0 0 24 24"><path stroke="#271607" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m15 11-4 4-2-2m-5 3.8v-5.348c0-.534 0-.801.065-1.05a2 2 0 0 1 .28-.617c.145-.213.346-.39.748-.741l4.801-4.202c.746-.652 1.119-.978 1.538-1.102.37-.11.765-.11 1.135 0 .42.124.794.45 1.54 1.104l4.8 4.2c.403.352.603.528.748.74.127.19.222.398.28.618.065.249.065.516.065 1.05v5.352c0 1.118 0 1.677-.218 2.105a2 2 0 0 1-.875.873c-.427.218-.986.218-2.104.218H7.197c-1.118 0-1.678 0-2.105-.218a1.999 1.999 0 0 1-.874-.873C4 18.48 4 17.92 4 16.8Z"/%3E%3C/svg%3E');
          width: 1rem;
          position: absolute;
          left: 0;
          top: 0.02em;
        }
      }
    }
    :global(ol) {
      list-style-type: decimal;
      padding-left: 1.5rem;
    }
  }
</style>
