---
import PortableText, { PortableTextQuery, type PortableTextValue } from '@components/ui/portable-text'
import Button, { ButtonDataQuery, type ButtonDataProps } from '@components/ui/Button'
import Image, { ImageDataQuery, type ImageDataProps } from '@components/ui/Image'

export const SimpleColumn_Query = `
  _type == "SimpleColumn" => {
    isReversed,
    label,
    ${PortableTextQuery('heading')}
    ${PortableTextQuery('paragraph')}
    ${ButtonDataQuery('cta')}
    ${ImageDataQuery('image')}
  },
`

type Props = {
  index: number
  sectionId?: string
  isReversed: boolean
  label: string
  heading: PortableTextValue
  paragraph: PortableTextValue
  cta: ButtonDataProps
  image: ImageDataProps
}

const { index, sectionId, isReversed, label, heading, paragraph, cta, image } = Astro.props

const Label = index === 0 ? 'h2' : 'h3'
---

<section class="SimpleColumn" id={sectionId} data-reversed={isReversed}>
  <header>
    <Label class="heading-label">{label}</Label>
    <PortableText value={heading} heading={index === 0 ? 'h1' : 'h2'} />
    <PortableText value={paragraph} class="paragraph" />
    <Button {...cta} />
  </header>
  <Image
    {...image}
    sizes="(max-width: 56.1875rem) 100vw, (max-width: 78rem) 25vw, 50vw"
    priority={index === 0}
    class="image"
  />
</section>

<style lang="scss">
  .SimpleColumn {
    display: grid;
    align-items: center;
    grid-template-columns: 1fr 1fr;
    gap: clamp(2rem, calc(3vw / 0.48), 3rem);
    padding: clamp(4rem, calc(5vw / 0.48), 7rem) 0;
    &[data-reversed='true'] {
      .image {
        order: -1;
      }
    }
    .paragraph {
      margin: clamp(1rem, calc(1vw / 0.48), 1.25rem) 0 clamp(1.5rem, calc(2vw / 0.48), 2rem);
    }
    @media (max-width: 78rem) {
      grid-template-columns: 1fr 0.5fr;
      &[data-reversed='true'] {
        grid-template-columns: 0.5fr 1fr;
      }
    }
    @media (max-width: 56.1875rem) {
      grid-template-columns: 1fr;
      &[data-reversed='true'] {
        grid-template-columns: 1fr;
      }
      .image {
        margin: 0 calc(var(--page-margin) * -1);
        max-width: calc(100% + (var(--page-margin) * 2));
      }
    }
  }
</style>
