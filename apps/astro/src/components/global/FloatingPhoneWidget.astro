---
import Image, { ImageDataQuery, type ImageDataProps } from '@components/ui/Image'
import sanityFetch from '@utils/sanity.fetch'

const data = await sanityFetch<{
  phoneNumber: string
  tooltipText: string
  avatar: ImageDataProps
}>({
  query: `*[_type == "global"][0].phoneWidget {
    phoneNumber,
    tooltipText,
    ${ImageDataQuery('avatar')}
  }`,
})

if (!data) return null
---

<a href={`tel:${data.phoneNumber}`} class="floating-phone-widget" aria-label={data.tooltipText}>
  <Image {...data.avatar} sizes="32px" class="avatar" />
  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
      d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"
      stroke="#f2ede8"
      stroke-width="2"
      stroke-linecap="round"
      stroke-linejoin="round">
    </path>
  </svg>
  <p class="tooltip" role="tooltip">
    {data.tooltipText}
  </p>
</a>

<style lang="scss">
  .floating-phone-widget {
    position: fixed;
    bottom: 1.5rem;
    right: 1.5rem;
    z-index: 1000;
    display: grid;
    place-items: center;
    width: 3.5rem;
    height: 3.5rem;
    background: var(--primary-400, #824c1a);
    border-radius: 50%;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      height: 100%;
      width: 100%;
      background: rgba(130, 76, 26, 0.38);
      border-radius: 50%;
      animation: pulse 3s infinite;
      opacity: 0;
      z-index: -1;
    }
    .avatar {
      position: absolute;
      top: -1rem;
      left: -1rem;
      width: 2.5rem;
      height: 2.5rem;
      border-radius: 50%;
      overflow: hidden;
      border: 2px solid var(--primary-100, #f2ede8);
    }
    .tooltip {
      position: absolute;
      bottom: 100%;
      left: 100%;
      transform: translateX(-100%) translateY(-1rem);
      background: var(--primary-700, #271607);
      color: var(--primary-100, #f2ede8);
      padding: 0.5rem 0.75rem;
      border-radius: 0.375rem;
      font-size: 0.875rem;
      width: max-content;
      max-width: 12rem;
      opacity: 0;
      pointer-events: none;
      transition: opacity 300ms var(--easing);
      &::after {
        content: '';
        position: absolute;
        top: 100%;
        left: calc(100% - 1.75rem);
        transform: translateX(-50%);
        width: 0;
        height: 0;
        border-left: 0.375rem solid transparent;
        border-right: 0.375rem solid transparent;
        border-top: 0.375rem solid var(--primary-700, #271607);
      }
    }
    &:hover {
      .tooltip {
        opacity: 1;
      }
    }
  }
  @keyframes pulse {
    0%,
    5% {
      opacity: 1;
      transform: translate(-50%, -50%) scale(0);
    }
    30% {
      opacity: 0.38;
      transform: translate(-50%, -50%) scale(1.25);
    }
    50%,
    100% {
      opacity: 0;
      transform: translate(-50%, -50%) scale(1.75);
    }
  }
</style>
