---
import Layout from '@layout/Layout.astro'
import Components, { type ComponentsProps, Components_Query } from '@components/Components.astro'
import metadataFetch from '@utils/metadata.fetch'
import sanityFetch from '@utils/sanity.fetch'
import Breadcrumbs from '@components/ui/Breadcrumbs.astro'

const { slug: _slug } = Astro.params
const slug = `/${_slug || ''}`

const page = await sanityFetch<{
  name: string
  slug: string
  components: ComponentsProps
}>({
  query: `*[_type == "page" && slug.current == $slug][0] {
    name,
    "slug": slug.current,
    ${Components_Query}
  }`,
  params: { slug: slug },
})

if (!page) return Astro.rewrite('/404')

const metadata = await metadataFetch(slug)
---

<Layout {...metadata}>
  <Breadcrumbs data={[{ name: page.name, path: page.slug }]} isHidden={true} />
  <Components data={page.components} />
</Layout>

<script is:inline>
  window.pageData = { title: document.title }
</script>

<script>
  import { trackEvent } from '@api/analytics/track-event'

  document.addEventListener('DOMContentLoaded', () => {
    trackEvent({
      meta: {
        event_name: 'ViewContent',
        content_name: window.pageData.title,
      },
      ga: {
        event_name: 'view_item',
        params: {},
      },
    })
  })
</script>
